@using PhasmoSheet.Core.Common
@inherits LayoutComponentBase
@inject GlobalState state

@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<div class="container">
    <aside class="sidebar" style="border-right: 1px solid @Colors.Purple.Default dashed;">
        <MudText Typo="Typo.h5">Evidence</MudText>
        @foreach(var evidence in evidences)
        {

            <MudButton Variant="Variant.Filled"
                       OnClick="@(() => state.ToggleEvidence(evidence))"
                       Color="@(state.GetEvidenceButtonColor(evidence))"
                       Class="icon-text-button">
                <MudIcon Icon="@state.GetEvidenceIconButton(evidence)" />
                <span class="icon-text">@Format.Evidence(evidence)</span>
            </MudButton>
            <div></div>
        }
    </aside>
    <main class="content">
        @Body
    </main>
</div>

<style>
    body {
        background-color: rgba(20, 20, 20, 255);
        margin: 0;
        font-family: Arial, sans-serif;
    }

    .container {
        display: flex;
    }

    .sidebar {
        width: 200px;
        color: #fff;
        padding: 10px;
        display: flex;
        flex-direction: column;
        position: fixed;
        height: 100vh;
    }

        .sidebar button {
            background: none;
            border: none;
            color: #fff;
            padding: 10px;
            text-align: left;
            cursor: pointer;
            font-size: 16px;
        }

            .sidebar button.active {
                background-color: #444;
            }

    .content {
        margin-left: 210px;
        padding: 20px;
        flex: 1;
    }

    .icon-text-button {
        display: flex;
        align-items: center; /* Aligns items vertically centered */
        justify-content: flex-start; /* Aligns items horizontally left */
    }

    .icon-text {
        margin-left: 8px; /* Adjust the spacing as needed */
    }

</style>

@code {
    private string currentState;

    private Evidence[] evidences = new Evidence[]
    {
        Evidence.EMF5,
        Evidence.Ultraviolet,
        Evidence.GhostOrb,
        Evidence.GhostWriting,
        Evidence.FreezingTemperatures,
        Evidence.SpiritBox,
        Evidence.DOTSProjector
    };

    private void ChangeState(string state)
    {
        currentState = state;
        StateHasChanged();
    }
}
